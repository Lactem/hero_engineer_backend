server.port=8081

#origins=https://heroengineer.com
origins=*

jwt.signing.key.secret=gdcVGSelZGdrlAEUrdFXtdZmeCEynYsW
jwt.get.token.uri=/api/authenticate
jwt.refresh.token.uri=/api/refresh
jwt.http.request.header=Authorization
jwt.token.expiration.in.seconds=604800

spring.data.mongodb.database=heroEngineer
spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.host=hero_engineer_mongo_container
spring.data.mongodb.port=27017
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=M!]mBSVe.9P{uk7XprbnR.dRk)b7v"7C
spring.data.mongodb.username=heroEngineerUser
spring.data.mongodb.password=M,cYR3.E2#8`s%sY

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

# Where to store Hero Council Declarations
file.upload-dir=/uploads
# Where to store reports (including PDF data dumps)
file.reports-dir=/reports


# FIRST: Follow https://docs.mongodb.com/manual/tutorial/enable-authentication/
# use admin
# db.createUser({user: "admin",pwd: passwordPrompt(), roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]})
# pwd: M!]mBSVe.9P{uk7XprbnR.dRk)b7v"7C
# Add the following to the config
# security:
#    authorization: enabled

# use admin
# db.createUser({user: "heroEngineerUser", pwd: passwordPrompt(), roles: [{role: "dbOwner", db: "heroEngineer"}], authenticationRestrictions: [{clientSource: ["127.0.0.1"]}]})
# pwd: M,cYR3.E2#8`s%sY

# To make a professor:
# use heroEngineer
# db.user.update({"email": "admin@usc.edu"}, {$set: {"isProf": true}})

# To connect:
# mongo --port 27017  --authenticationDatabase "admin" -u "heroEngineerUser" -p

# To backup the database in prod:
# mongodump --port 27017 --authenticationDatabase "admin" -u "admin" --db "heroEngineer"
# docker cp hero_engineer_mongo_container:/dump ~/hero_engineer/dump/month_day_year

# To run a Mongo script in prod after going into the Docker container
# mongo 'mongodb://admin:M%21%5DmBSVe.9P%7Buk7XprbnR.dRk%29b7v%227C@localhost:27017' mongo-cmd.js

# Example mongo-cmd.js script file to print quizzes and then update a user's quests:
# db = connect("admin:M%21%5DmBSVe.9P%7Buk7XprbnR.dRk%29b7v%227C@localhost:27017/heroEngineer?authSource=admin");
# cursor = db.quiz.find();
# while ( cursor.hasNext() ) {
#   printjson( cursor.next() );
# }
# db.user.update({"email":"heroengineertest@usc.edu"}, {$set: {"quests" : [ { "_id" : ObjectId("5f3c8004442365079638d7fd"), "name" : "Quiz 1:  Syllabus Review", "description" : "Your first Quest is a simple quiz.  Points will be awarded from the quiz.  It's open notes.  If you missed something in class, ask me about it before answering--start off with 100%!", "automaticXpReward" : 5, "main" : true, "available" : true, "complete" : true, "completeWithQuizzes" : true, "completeWithCode" : false, "completeWithQuizzesAndCode" : false, "codeEnteredSuccessfully" : false, "code" : "", "incompleteQuizIds" : [ ], "completedQuizzes" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7f2"), "name" : "Syllabus Review", "gradePercent" : 0.8, "viewable" : false, "questions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7e5"), "question" : "Typically, major assignments will be graded in:", "points" : 1, "studentAnswerId" : "5f3a2e2c442365079638d7e7", "answerOptions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7e6"), "answer" : "1 week", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7e7"), "answer" : "2 weeks", "correct" : true }, { "_id" : ObjectId("5f3a2e2c442365079638d7e8"), "answer" : "3 weeks", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7e9"), "answer" : "Major assignments are NOT graded in this class", "correct" : false } ] }, { "_id" : ObjectId("5f3a2e2c442365079638d7db"), "question" : "Work in this class will be submitted through:", "points" : 1, "studentAnswerId" : "5f3a2e2c442365079638d7dd", "answerOptions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7dc"), "answer" : "carrier pigeon delivery system", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7dd"), "answer" : "Blackboard and HeroEngineer.com", "correct" : true }, { "_id" : ObjectId("5f3a2e2c442365079638d7de"), "answer" : "Blackboard ONLY", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7df"), "answer" : "HeroEngineer.com ONLY", "correct" : false } ] }, { "_id" : ObjectId("5f3a2e2c442365079638d7d2"), "question" : "Who said: �~@~\The strength of the team is each individual member. The strength of each member is the team.�~@~] ", "points" : 1, "studentAnswerId" : "5f3a2e2c442365079638d7d6", "answerOptions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7d3"), "answer" : "Mark Twain", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7d4"), "answer" : "Phil Jackson", "correct" : true }, { "_id" : ObjectId("5f3a2e2c442365079638d7d5"), "answer" : "Phil Mickelson", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7d6"), "answer" : "Ant Man", "correct" : false } ] }, { "_id" : ObjectId("5f3a2e2c442365079638d7ef"), "question" : "True or False: Late papers ARE allowed in this class but they lose points", "points" : 1, "studentAnswerId" : "5f3a2e2c442365079638d7f0", "answerOptions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7f0"), "answer" : "True", "correct" : true }, { "_id" : ObjectId("5f3a2e2c442365079638d7f1"), "answer" : "False", "correct" : false } ] }, { "_id" : ObjectId("5f3a2e2c442365079638d7cf"), "question" : "True or False:  Late papers are NOT accepted", "points" : 1, "studentAnswerId" : "5f3a2e2c442365079638d7d1", "answerOptions" : [ { "_id" : ObjectId("5f3a2e2c442365079638d7d0"), "answer" : "True", "correct" : false }, { "_id" : ObjectId("5f3a2e2c442365079638d7d1"), "answer" : "False", "correct" : true } ] } ] } ], "requiredQuestIds" : [ ] }, { "_id" : ObjectId("5f46e4fffdee5a5122a4e252"), "name" : "Bonus Stage by code invitation only", "description" : "Your excellent work on the previous task give you a chance for an extra point.  Use the Code provided to unlock this bonus question.", "automaticXpReward" : 1, "main" : false, "available" : true, "complete" : false, "completeWithQuizzes" : false, "completeWithCode" : false, "completeWithQuizzesAndCode" : true, "codeEnteredSuccessfully" : false, "code" : "69qx7fSp5XY38enu", "universalCode" : "", "incompleteQuizIds" : [ ], "completedQuizzes" : [ { "_id" : ObjectId("5f46e5b3fdee5a5122a4e256"), "name" : "Optional Bonus Stage Quiz--Hero Trait", "gradePercent" : 1.0, "viewable" : true, "questions" : [ { "_id" : ObjectId("5f46e5b3fdee5a5122a4e253"), "question" : "Have you demonstrated the Hero trait you noted in Pausch?", "points" : 0, "studentAnswerId" : "5f46e5b3fdee5a5122a4e254", "answerOptions" : [ { "_id" : ObjectId("5f46e5b3fdee5a5122a4e254"), "answer" : "Yes!", "correct" : true }, { "_id" : ObjectId("5f46e5b3fdee5a5122a4e255"), "answer" : "Not yet!", "correct" : true } ] } ] } ], "requiredQuestIds" : [ ] } ]} });

# To set the cronjob, make sure the cronjob daemon is running, and add the following cronjob line (to the file from `crontab -e`):
# 0 4 * * * ./root/hero_engineer/backup.sh >> /root/hero_engineer/log/cronjob.log

# backup.sh
#!/bin/bash
# docker exec -i hero_engineer_mongo_container bash < cmds_in_docker.sh
# printf -v date '%(%Y-%m-%d %H:%M:%S)T\n' -1
# docker cp hero_engineer_mongo_container:/dump ~/hero_engineer/dump/$(date +"%FT%H%M%S")

# cmds_in_docker.sh
#!/bin/bash
# rm -rf /dump/heroEngineer
# #mongodump --port 27017 --authenticationDatabase "admin" -u "admin" --db "heroEngineer" -p "M%21%5DmBSVe.9P%7Buk7XprbnR.dRk%29b7v%227C"
# mongodump --uri='mongodb://admin:M%21%5DmBSVe.9P%7Buk7XprbnR.dRk%29b7v%227C@localhost:27017/heroEngineer?authSource=admin'
